0.2.11
 - New randomization function
 - Rolls-first then property setting?

0.2.10
 - Upgrade line preservation
 - Reformatting

0.2.9
 - Mostly done, just finish porting things over and making sure things work


BROKEN:
 * Class and property karma (broken by update line preservation in gather-randomizations.lua)


1. Currently working on information
2. Also separate randomization function and rand object
3. Make randomization algorithm assume property is non-nil soon
4. Account for control phase randomization and for autoplace/data-updates randomizations



 - Steam engine temperature better randomized
 - Randomize things based on upgrade lines
 - Rewrite randomization to be prototype based
 - Fix rounding not working
 - Compile and fix various bug reports
 - Make essential technologies sooner
 - Customization additions
 - Rewrite randomization algorithm
 - Randomize more parts of the dependency graph (like recipes)
 - Go through and compile TODO's in this note and throughout program
 - Randomize more properties
 - Organize todo
 - Group randomize things like crafting speed with power so that it doesn't "make both things better"
 - Organize todo better
 - Do things like property_info = "temperature", so not including the initial "property_info." part anymore (or needing to include property info in the files)
 - Make rounding happen again after min/maxing
 - Reorganize settings, combine logistics and production into one setting and remove settings that can just exist as overrides
 - Separate entity.lua into more files, but what should categorization be? Maybe a folder
 - Rename rand_energy and the types rando functions to something to suggest they are different from normal rand (like rand_util)
 - Fix in inertia functions for new randomizations
 - Galdoc's manufacturing randomization compatibility? Maybe compatibility with special things from mods?


Add crafting cost to randomization
Add power level normalizer to keep power levels similar to what they were at start

Clean up data-final-fixes

Next releases:
  - Make mining drill dropoff and other similar properties not influenced by bias/chaos factor

  - Use serpent.block or dump and such rather than prg.get_key

  - Have simply including reformat do the reformatting so I don't have to call any of its functions
  - Add chaos mode

  - Test mod compatibility
  - Do special evaluation of the "importance" of items to randomize their crafting times more effectively
  - In-game tutorial/tooltips for more obscure randomizations
  - Refactor so that each function called in data-final-fixes uses each prototype exactly once
  - Randomly randomized mode where which settings are randomized is randomized
  - Add "separation function"

  - Get random map settings working with modded game
  - Randomize collision masks
  - Learn about fluid boxes and randomize those
  - Randomize collision boxes (do more carefully than before, like also changing graphics)
  - Shuffle damage types (advanced randomization)
  - Recipes randomly require water
  - Crafting times less variance for items needed for science
  - Sample from gamma distribution for simpler properties
  - Use local functions instead of globals
  - Randomize research tree
  - Link inserters (specifically, filter inserters/fast inserters, for example, should be hard linked)
  - Account for efficiency when rounding energy_used for furnaces (and other such objects)
  - Round min consumption
  - Check for extra properties in params for randomize_numerical_property to catch errors
  - Make mid-game changing of character values work for existing saves
  - Optional mod dependencies with "extra thing" mods in mind
  - Add recommended mods (increased inventory)
  - Add special "compatibilities" for vanilla (and for other mods?)
  - prg_key for group randomizations
  - Option for resistances outside of 0-100
  - Increase burner inserter and non-machine things' stats when they're burner energy sources
  - Add option to only change some recipe times
  - Function for find_separation_bias
  - Documentation for randomization_algorithms
  - Max factor changeable with setting
  - Change color of lights/lamps/labs to disco/different colors
  - Make prg_key for entities depend on properties being randomized too
  - Make grenade range circle correct
  - Make miniloaders display correct speed
  - Seperate out energy property names
  - Re-round electric pole numbers
  - Extract building the dependency graph out into a separate file
  - Add smart collision box logic to power poles again
  - Modify inserter rotation speed based on the new randomized position
  - Inerter power requirements higher variance?
  - In compatibilities, make sure burner or regular inserters aren't cursed (or maybe at least not all those and long inserters)
  - Make setting to make things biased toward the player
  - Check that I make sure inserters aren't too slow for belts
  - Randomize technology bonus amounts (like bullet damage increase)
  - Randomize reach distance mid-game
  - Randomize ore/basic resource gathering (Loup&Snoop idea)
  - Ores produce "random" sideproducts

Organization

Random maps
  - Randomize enemy evolution parameters
  - Randomize pollution parameters

Support
  - Space Exploration support

Properties:
  - Gun shooting speed and range
  - Biter pollution absorbed
  - emissions_per_second
  - healing_per_tick
  - fuel_acceleration/top-speed multiplier (randomize with vehicles)
  - braking_power/braking_force
  - Localizations

Silly additions
  - Tile map color randomization